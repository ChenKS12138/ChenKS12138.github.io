{"version":3,"sources":["webpack:///./src/pages/list.tsx"],"names":["List","props","data","useState","currentTag","setCurrentTag","totalCount","allMarkdownRemark","nodes","tags","useMemo","Array","from","Set","reduce","prev","current","concat","isArray","frontmatter","groups","prevGroup","date","title","id","split","year","MMDD","targetGroup","find","x","currentNode","includes","push","backgroundSrc","appConfig","headerImages","archives","height","content","fontSize","fontWeight","lineHeight","color","margin","width","maxWidth","flexWrap","justify","map","tag","key","direction","onClick","padding","style","cursor","transition","TagSelected","marginTop","paddingBottom","lineWidth","lineStyle","lineColor","align","group","node","navigate","styled","div","query"],"mappings":"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","file":"component---src-pages-list-tsx-ab53c2fe3197fb5274cb.js","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { PageProps, graphql, navigateTo, navigate } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport { Layout, Text, Space, DevideLine, BoxContainer } from \"@/components\";\n\nimport appConfig from \"@/app.config\";\n\ninterface FrontMatter {\n  date: string;\n  tags: Array<string>;\n  title: string;\n}\n\ninterface ArchiveItem {\n  frontmatter: FrontMatter;\n  id: string;\n}\n\nconst TAG_ALL = \"ALL\";\n\nfunction List(props: PageProps) {\n  const { data } = props;\n  const [currentTag, setCurrentTag] = useState(TAG_ALL);\n\n  const totalCount: number = (data as any).allMarkdownRemark.totalCount;\n  const nodes: Array<ArchiveItem> = (data as any).allMarkdownRemark.nodes;\n\n  const tags = useMemo(\n    () =>\n      Array.from(\n        new Set(\n          nodes.reduce(\n            (prev, current) =>\n              prev.concat(\n                Array.isArray(current?.frontmatter?.tags)\n                  ? current?.frontmatter?.tags\n                  : []\n              ),\n            [TAG_ALL]\n          )\n        )\n      ),\n    [nodes]\n  );\n\n  const groups = nodes.reduce((prevGroup, current) => {\n    const {\n      frontmatter: { date, title, tags },\n      id,\n    } = current;\n    const [year, MMDD] = date.split(\" \");\n    const targetGroup = prevGroup.find(x => x.year === year);\n    const currentNode = { MMDD, title, tags, id };\n\n    if (currentTag !== TAG_ALL && !tags.includes(currentTag)) return prevGroup;\n\n    if (targetGroup) {\n      targetGroup.nodes.push(currentNode);\n    } else {\n      prevGroup.push({\n        year,\n        nodes: [currentNode],\n      });\n    }\n    return prevGroup;\n  }, []);\n\n  return (\n    <Layout\n      backgroundSrc={appConfig.headerImages.archives}\n      height=\"500px\"\n      content={\n        <Text fontSize=\"2rem\" fontWeight=\"500\" lineHeight=\"1.2\" color=\"#ffffff\">\n          Archive\n        </Text>\n      }\n      title=\"Archives\"\n    >\n      <BoxContainer margin=\"0 auto\" width=\"960px\" maxWidth=\"90%\">\n        <Space flexWrap justify=\"start\">\n          {tags.map(tag => (\n            <Space key={tag} direction=\"vertical\">\n              <BoxContainer\n                onClick={() => {\n                  setCurrentTag(tag);\n                }}\n                key={tag}\n                padding=\"0.5rem 1rem\"\n                style={{\n                  cursor: \"pointer\",\n                  transition: \"all 0.2s ease-in-out\",\n                }}\n              >\n                {tag === currentTag ? (\n                  <TagSelected>\n                    <BoxContainer padding=\"0.5rem 0.5rem\">\n                      <Text color=\"#ffffff\">{tag}</Text>\n                    </BoxContainer>\n                  </TagSelected>\n                ) : (\n                  <BoxContainer padding=\"0.5rem 0.5rem\">\n                    <Text\n                      color=\"#3c4858\"\n                      fontSize=\"1rem\"\n                      lineHeight=\"1.5\"\n                      fontWeight=\"300\"\n                    >\n                      {tag}\n                    </Text>\n                  </BoxContainer>\n                )}\n              </BoxContainer>\n            </Space>\n          ))}\n        </Space>\n        {currentTag === TAG_ALL && (\n          <BoxContainer marginTop=\"1rem\" paddingBottom=\"1rem\">\n            <Text fontWeight=\"300\" color=\"#3c4858\">\n              Total:{totalCount}\n            </Text>\n          </BoxContainer>\n        )}\n        <DevideLine\n          width=\"100%\"\n          lineWidth=\"1px\"\n          lineStyle=\"solid\"\n          lineColor=\"rgba(0, 0, 0, 0.1)\"\n        />\n        <Space direction=\"vertical\" align=\"start\">\n          {groups.map(\n            (group: {\n              year: string;\n              nodes: Array<{\n                id: string;\n                title: string;\n                tags: Array<string>;\n                MMDD: string;\n              }>;\n            }) => (\n              <BoxContainer margin=\"20px auto\" width=\"100%\" key={group.year}>\n                <Space direction=\"vertical\">\n                  <Text\n                    fontSize=\"1.25rem\"\n                    fontWeight=\"500\"\n                    lineHeight=\"1.2\"\n                    color=\"#3c4858\"\n                  >\n                    {group.year}\n                  </Text>\n                  <Space direction=\"vertical\" align=\"start\">\n                    {group.nodes.map(node => (\n                      <BoxContainer\n                        padding=\"0.75rem 1.25rem\"\n                        width=\"100%\"\n                        key={node.id}\n                      >\n                        <Space\n                          style={{\n                            cursor: \"pointer\",\n                          }}\n                          align=\"center\"\n                          onClick={() => navigate(`/detail/${node.id}`)}\n                          justify=\"space-between\"\n                        >\n                          <Text\n                            color=\"#495057\"\n                            fontWeight=\"300\"\n                            fontSize=\"1rem\"\n                          >\n                            {node.title}\n                          </Text>\n                          <Text\n                            color=\"#495057\"\n                            fontWeight=\"300\"\n                            fontSize=\"1rem\"\n                          >\n                            {node.MMDD}\n                          </Text>\n                        </Space>\n                      </BoxContainer>\n                    ))}\n                  </Space>\n                </Space>\n              </BoxContainer>\n            )\n          )}\n        </Space>\n      </BoxContainer>\n    </Layout>\n  );\n}\n\nexport default List;\n\nconst TagSelected = styled.div`\n  background-color: #ff4f5e;\n  border-radius: 0.25rem;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\n`;\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      totalCount\n      nodes {\n        id\n        frontmatter {\n          date(formatString: \"YYYY MM-DD\")\n          tags\n          title\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
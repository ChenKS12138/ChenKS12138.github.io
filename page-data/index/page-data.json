{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allMarkdownRemark":{"nodes":[{"id":"c552babe-28b3-56c6-b1b9-378aac9bb706","excerpt":"JavaScript 中的 BigInt 之前写 JavaScript 代码，有听说到Number.MAX_VALUE和Number.MAX_SAFE_INTEGER，但是一直没有做深入的理解，对Number.MAX_SAFE_INTEGER并不太了解。 遇到的问题 要从一个密码学实验代码说起，最…","frontmatter":{"date":"2020-04-11","title":"JavaScript中的BigInt","tags":["JavaScript"],"index_img":{"publicURL":"/static/8e79776eb2650fe50f05dc75c7b158a6/Gbtt2R.png"}}},{"id":"2a5503bf-4c05-5301-82f8-ca1670eb4060","excerpt":"前言 Node.js是作为一个前端开发者必备的技术栈。 正如官方中说的那样，Node.js是一个基于 Chrome V8 引擎的 JavaScript 运行时。 Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript eng…","frontmatter":{"date":"2020-01-14","title":"Node.js入门指北","tags":["JavaScript","Node.js"],"index_img":{"publicURL":"/static/90dbc981bbc734f826979dc381b55600/2.png"}}},{"id":"96b46d98-9df5-5443-853f-f86a77bef4d3","excerpt":"概述 主要是讲我对flutter 的初次尝试吧，写了个南邮图书馆 APP。感觉可以优化的地方还很多，第一次使用flutter 对widget 的使用还不太熟悉，布局写得不太好。先说说我的思路吧，一般来说，说到爬虫都会想到后端，web 前端因为有浏览器的同源限制，所以很难使用爬虫技术。但是在clie…","frontmatter":{"date":"2019-09-25","title":"初试flutter","tags":["Flutter","Dart","跨端技术"],"index_img":{"publicURL":"/static/1b9f52625737f01bb7f4696a709e51e9/flutter.jpg"}}},{"id":"6ab6d06b-46b0-5580-9339-14f9425a6946","excerpt":"什么是函数节流和函数防抖 这两者都是 JavaScript 中的一些优化方法。顾名思义，节流与防抖都是通过一定的方法，较少函数的调用频率，来达到优化的目的。 函数防抖 (Debounce) 主要是实现，当一定的事件间隔内连续多次触发指定的事件后，事件处理函数不会立即执行。仅在最后一次触发的若干毫秒…","frontmatter":{"date":"2019-08-10","title":"JS中的函数节流与函数防抖","tags":["JavaScript"],"index_img":{"publicURL":"/static/5f8ede6a2c93516fc9b66b29c09ef9db/debounce1.jpg"}}},{"id":"76d9a4d6-f261-568b-b220-84d833cbe045","excerpt":"概述 肖申克的救赎，英文名为The Shawshank Redemption 。讲述的是一位年轻的银行家安迪·杜弗兰被指控杀害他的妻子与其情夫而入狱，本将在肖申克监狱中度过余生，但是在得知自己无罪后，越狱重获新生的故事。  安迪本来是一个年轻有为的银行家，但被判了无期徒刑进入了肖申克监狱。一开始，…","frontmatter":{"date":"2019-07-25","title":"肖申克的救赎","tags":["随笔","影评"],"index_img":{"publicURL":"/static/3ad936a8f72d3168e546eadd0609d322/shawshank1.jpg"}}},{"id":"7aac5e6f-975f-54c3-9211-ee161df8b9d3","excerpt":"什么是跨域 简单地来说就是域 A 下网页试图加载域 B 下的资源。一般来说，浏览器会阻止这类行为。这是浏览器的同源策略导致的。所谓同源，就是要求两个 URL 的协议，域名，端口全部相同。 跨域会有什么影响 AJAX 请求发不出去 DOM、JS 对象无法获取 Cookie、LocalStorage …","frontmatter":{"date":"2019-07-22","title":"跨域那些事","tags":["request"],"index_img":{"publicURL":"/static/b93703f2fa38abd15a42f085e453be72/cross_site4.jpg"}}},{"id":"9c86f700-3cc4-5fde-be49-df5ea8a03cd6","excerpt":"一道题目 这是 ScriptOJ 上的一道题目 => 传送门\n记忆化斐波那契函数（Memoization）\n题目是这样的 斐波那契数列指的是类似于以下的数列： 1, 1, 2, 3, 5, 8, 13, ....\n也就是，第 n 个数由数列的前两个相加而来：f(n) = f(n - 1) + f(…","frontmatter":{"date":"2019-07-22","title":"JavaScript中的闭包","tags":["JavaScript"],"index_img":null}}]}},"pageContext":{}}}